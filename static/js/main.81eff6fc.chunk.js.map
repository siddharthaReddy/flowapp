{"version":3,"sources":["services/Auth/FakeAuth.js","services/Auth/PrivateRoute.js","containers/LoginPage.js","components/Layout/ButtonLayout.js","components/Workflows/Workflow/Workflow.js","components/Workflows/Workflows.js","services/Mockdata/WorkflowService.js","containers/WorkflowsContainer/WorkflowsContainer.js","components/Node/Node.js","components/Nodes/Nodes.js","containers/CreateWorkflow/CreateWorkflow.js","containers/App.js","serviceWorker.js","index.js"],"names":["fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","AuthButton","withRouter","history","onClick","push","PrivateRoute","children","rest","render","location","to","pathname","state","from","LoginPage","useHistory","useLocation","Container","maxWidth","className","TextField","label","variant","size","type","Checkbox","color","value","Button","replace","ButtonLayout","props","Workflow","nodes","this","map","task","key","id","title","deleteHandler","fontSize","readOnly","name","Component","Workflows","workflows","wflow","isCompleted","event","deleteWorkflowHandler","getWorkflows","a","console","log","Promise","resolve","status","content","WorkflowsContainer","filterDropdownChangeHandler","selected","target","filteredWorkflows","workflowsList","filter","setState","filterDropdownValue","deleteWorkflowClickHandler","preventDefault","existingIndex","findIndex","w","splice","deleteWorkflow","componentDidMount","text","match","toLowerCase","indexOf","placeholder","onChange","searchInputChangeHandler","bind","disabled","hidden","startIcon","Node","changed","Nodes","changeHandler","prop","nodeIndex","n","node","CreateWorkflow","nameChangeHandler","shuffleWorkflowsHandler","i","length","j","Math","floor","random","pop","addNodeClickHandler","saveWorkflowClickHandler","updateWorkflow","updateNodesHandler","App","path","component","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81eff6fc.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nexport const fakeAuth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        \n      fakeAuth.isAuthenticated = true;\n      setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n      fakeAuth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    }\n};\n\nexport const AuthButton = withRouter(({ history }) => (\n    fakeAuth.isAuthenticated\n      ? <p>\n          Welcome! <button onClick={() => {\n            fakeAuth.signout(() => history.push('/'))\n          }}>Sign out</button>\n        </p>\n      : null\n  ))","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { fakeAuth } from './FakeAuth';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          fakeAuth.isAuthenticated ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport \"./App.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { fakeAuth } from '../services/Auth/FakeAuth';\nimport { Container, TextField, Button, Checkbox } from '@material-ui/core';\n\n\nfunction LoginPage() {\n    let history = useHistory();\n    let location = useLocation();\n  \n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n      fakeAuth.authenticate(() => {\n        history.replace(from);\n      });\n    };\n  \n    return (\n        <Container maxWidth=\"xs\" className=\"login-container box-layout\">\n            <h2 className=\"text-center\">Login</h2>\n            <div className=\"input-field\">\n                <TextField label=\"Username\" variant=\"outlined\" size=\"small\" />\n            </div>\n            <div className=\"password-field\">\n                <TextField type=\"password\" label=\"Password\" variant=\"outlined\" size=\"small\" />\n            </div>\n\n            <div className=\"rememberme-field\">\n                <Checkbox color=\"primary\" value=\"checkedA\" />\n                <label>Remember Me</label>\n            </div>\n\n            <div className=\"sumbit-button text-center\">\n                <Button variant=\"contained\" color=\"primary\" onClick={login}>Log in</Button>\n            </div>\n        </Container>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\nimport './ButtonLayout.css';\n\nconst ButtonLayout = (props) => {\n    return <div className=\"button-layout\">{props.children}</div>\n}\n\nexport default ButtonLayout;","import React, { Component } from \"react\";\nimport './Workflow.css';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass Workflow extends Component {\n    // Attributes: \n    // Name: string\n    // Status - completed/pending\n    // Nodes[]\n\n    render () {\n        let nodes = null;\n        if (this.props.nodes) {\n            nodes = (\n                this.props.nodes.map( task => {\n                    return (\n                        <li key={task.id}>\n                            <span>{task.title}</span>\n                            <CheckCircleIcon className=\"float-right\" />\n                        </li>\n                    )\n                })\n            )\n        }\n\n        return (\n            <div className='wflow-container box-layout'>\n                <div>\n                    <div className='delete-icon'>\n                        <DeleteForeverIcon onClick={this.props.deleteHandler} fontSize=\"large\"/>\n                    </div>\n                    <div>\n                        <div className='title'>\n                            <input readOnly value={this.props.name} />\n                        </div>\n                        <div className='nodes-list'>\n                            <ul>\n                                {nodes}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Workflow;","import React, { Component } from \"react\";\nimport './Workflows.css';\nimport Workflow from './Workflow/Workflow';\n\nclass Workflows extends Component {    \n\n    render () {\n        let workflows = null;\n        if (this.props.workflows) {\n            workflows = (this.props.workflows.map((wflow) => {\n                    return <Workflow key={wflow.id}\n                        name={wflow.name}\n                        isCompleted={wflow.isCompleted}\n                        nodes={wflow.nodes}\n                        deleteHandler={(event) => this.props.deleteWorkflowHandler(event, wflow.id) }/> \n                    })\n                )\n        }\n        return (\n            <div>\n                {/* Worfklow components goes here */}\n                <div className=\"workflows-container\">\n                    {workflows}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Workflows;","\nexport const getWorkflows = async () => { \n    console.log(\"getWorkflows called!\");\n    return Promise.resolve(workflows);\n}\n\nexport const updateWorkflow = (wflow) => {\n    let existingIndex = workflows.findIndex(w => w.id === wflow.id);\n\n    if (existingIndex !== -1) {\n        workflows[existingIndex] = wflow;\n    } else {\n        workflows.push(wflow);\n    }\n\n    console.log(\"updateWorkflows called!\");\n}\n\nexport const deleteWorkflow = (id) => {\n    let existingIndex = workflows.findIndex(w => w.id === id);\n\n    if (existingIndex !== -1) {\n        workflows.splice(existingIndex, 1);\n    }\n}\n\nlet workflows = [\n    {\n        id: '1',\n        name: 'Workflow 1',\n        isCompleted: true,\n        nodes: [\n            {id: '1-node1', title: 'Task 1', status: 'completed', content: 'This task is completed'},\n            {id: '1-node2', title: 'Task 2', status: 'in-progress', content: 'This task is inprogress'},\n            {id: '1-node3', title: 'Task 2', status: 'pending', content: 'This task is pending'}\n        ]\n    },\n    {\n        id: '2',\n        name: 'Workflow 2',\n        isCompleted: false,\n        nodes: [\n            {id: '2-node1', title: 'Task 1', status:'pending', content: 'Tasks are pending'},\n            {id: '1-node2', title: 'Task 2', status: 'in-progress', content: 'This task is inprogress'}\n        ]\n    },\n    {\n        id: '3',\n        name: 'Workflow 3',\n        isCompleted: false,\n        nodes: [\n            {id: '3-node1', title: 'Task 1', status:'pending', content: 'Tasks are pending'}\n        ]\n    }\n];","import React, { Component } from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport ButtonLayout from '../../components/Layout/ButtonLayout';\nimport Workflows from '../../components/Workflows/Workflows';\nimport { getWorkflows, deleteWorkflow } from \"../../services/Mockdata/WorkflowService\";\n\nclass WorkflowsContainer extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            workflows: this.workflowsList,\n            filterDropdownValue: ''\n        }\n    }\n\n    async componentDidMount() {\n        let workflows = await getWorkflows();\n        this.workflowsList = workflows;\n       \n        this.setState({\n            workflows: this.workflowsList,\n        });\n    }\n\n    componentWillUnmount() {\n        this.workflowsList = [];\n    }\n\n    searchInputChangeHandler(event) {\n        let text = event.target.value;\n        let list = [...this.workflowsList]; // clone instead of passing reference\n\n        let filteredWorkflows = list.filter(wflow => {\n            let match = false;\n            if (wflow.name) {\n                match = wflow.name.toLowerCase().indexOf(text.toLowerCase()) !== -1;\n            }\n            return match;\n        });\n\n        this.setState({\n            workflows: filteredWorkflows\n        })\n    }\n\n    filterDropdownChangeHandler = (event) => {\n        let selected = event.target.value;\n        let list = [...this.workflowsList];\n\n        let filteredWorkflows = list.filter(wflow => {\n            let match = true; // returns all workflows if selected==\"all\"\n\n            if (selected === \"completed\") {\n                return wflow.isCompleted\n            }\n            else if (selected === \"pending\") {\n                return !wflow.isCompleted\n            }\n\n            return match;\n        });\n\n        this.setState({\n            workflows: filteredWorkflows,\n            filterDropdownValue: event.target.value\n        })\n    }\n\n    deleteWorkflowClickHandler = (event, id) => {\n        event.preventDefault();\n        \n        //delete from database\n        deleteWorkflow(id);\n        \n        // fetch new updated list\n        this.componentDidMount();\n    }\n    \n    render () {\n        return (\n            <div>\n                <ButtonLayout>\n                    <div className=\"block first\">\n                        <input className=\"subitem\" type=\"text\" \n                            placeholder=\"Search Workflows\"\n                            onChange={this.searchInputChangeHandler.bind(this)} />\n\n                        <select className=\"subitem\" \n                            value={this.state.filterDropdownValue} \n                            onChange={this.filterDropdownChangeHandler}>\n                                <option value=\"\" disabled hidden>-- Filter --</option>\n                                <option value=\"all\">All</option>\n                                <option value=\"completed\">Completed</option>\n                                <option value=\"pending\">Pending</option>\n                        </select>\n                    </div>\n\n                    <div className=\"block second\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"md-button\"\n                            startIcon={<AddIcon />}\n                            size=\"small\">\n                            <Link to=\"/edit\">Create Workflow</Link>\n                        </Button>\n                    </div>\n                </ButtonLayout>\n\n                <Workflows workflows={this.state.workflows} deleteWorkflowHandler={this.deleteWorkflowClickHandler} />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(WorkflowsContainer);","import React, { Component } from \"react\";\nimport './Node.css';\n\nclass Node extends Component {\n\n    render() {\n        return (\n            <>\n                <div className='wflow-container box-layout'>\n                    <div>\n                        <div className='title'>\n                            <input value={this.props.title} \n                                onChange={(event) => this.props.changed(event, 'title')} />\n                                </div>\n                        <div className='text-area'>\n                            <textarea value={this.props.content} \n                                onChange={(event) => this.props.changed(event, 'content')} />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Node;","import React, { Component } from \"react\";\nimport Node from '../Node/Node';\n\nclass Nodes extends Component {\n\n    changeHandler = (event, prop, id) => {\n        const nodeIndex = this.props.nodes.findIndex((n) => n.id === id);\n        const node = {\n            ...this.props.nodes[nodeIndex]\n        };\n\n        if (prop === 'title') {\n            node.title = event.target.value;\n        }\n        else if (prop === 'content') {\n            node.content = event.target.value;\n        }\n\n        const nodes = [...this.props.nodes];\n        nodes[nodeIndex] = node;\n\n        this.props.changed(nodes); \n    }\n\n    render() {\n        return (\n            <div className=\"workflows-container\">\n                {\n                    this.props.nodes.map((n)=> {\n                        return <Node key={n.id}\n                                    title={n.title}\n                                    content={n.content}\n                                    changed={(event, prop) => this.changeHandler(event, prop, n.id)} />\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Nodes;","import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nimport { Button } from \"@material-ui/core\";\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport ButtonLayout from '../../components/Layout/ButtonLayout';\nimport Nodes from \"../../components/Nodes/Nodes\";\nimport { updateWorkflow } from \"../../services/Mockdata/WorkflowService\";\n\n\nclass CreateWorkflow extends Component {\n    constructor () {\n        super();\n        this.state = { \n            name: '',\n            nodes: []\n        }\n    }\n\n    nameChangeHandler = (event) => {\n        this.setState({\n            name: event.target.value\n        });\n    }\n\n    shuffleWorkflowsHandler = () => {\n        const nodes = [...this.state.nodes];\n\n        for (let i = nodes.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [nodes[i], nodes[j]] = [nodes[j], nodes[i]];\n        }\n\n        this.setState({\n            nodes: nodes\n        });\n    }\n\n    deleteWorkflowClickHandler = () => {\n        const nodes = [...this.state.nodes];\n        \n        // deletes last node\n        nodes.pop();\n\n        // update state\n        this.setState({\n            nodes: nodes\n        });\n    }\n\n    addNodeClickHandler = () => {\n        const nodes = [...this.state.nodes];\n        nodes.push({\n            id: Math.floor(Math.random() * 1000), \n            title: '',\n            content: '',\n            status: null\n        })\n\n        // update state\n        this.setState({\n            nodes: nodes\n        })\n    }\n\n    updateNodesHandler(nodes) {\n        console.log(\"update nodes handler clicked!\");\n        this.setState({\n            nodes: nodes\n        })\n    }\n\n    saveWorkflowClickHandler = () => {\n        let workflow = {\n            id: Math.floor(Math.random() * 1000),\n            name: this.state.name,\n            nodes: this.state.nodes,\n        }\n\n        // Update nodes to database\n        updateWorkflow(workflow);\n\n        //redirect to home page\n        if (this.props.history){\n            this.props.history.push(\"/flowapp\");\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <ButtonLayout>\n                    <div className=\"block first\">\n                        <input className=\"subitem\" type=\"text\" \n                            placeholder=\"Workflow Name\"\n                            value={this.state.name} \n                            onChange={this.nameChangeHandler} />\n                    </div>\n                    <div className=\"block second\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"md-button\"\n                            startIcon={<ShuffleIcon />}\n                            size=\"small\"\n                            onClick={this.shuffleWorkflowsHandler}>Shuffle</Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"md-button\"\n                            startIcon={<ClearIcon />}\n                            size=\"small\"\n                            onClick={this.deleteWorkflowClickHandler}>Delete</Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"md-button\"\n                            startIcon={<AddIcon />}\n                            size=\"small\"\n                            onClick={this.addNodeClickHandler}>Add Node</Button>\n                        \n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"md-button\"\n                            size=\"small\"\n                            onClick={this.saveWorkflowClickHandler}>Save</Button>\n                        \n                    </div>\n                </ButtonLayout>\n\n                <Nodes nodes={this.state.nodes} changed={(nodes) => this.updateNodesHandler(nodes)} />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(CreateWorkflow);","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { AuthButton } from '../services/Auth/FakeAuth';\nimport PrivateRoute from '../services/Auth/PrivateRoute';\nimport LoginPage from './LoginPage';\nimport WorkflowsContainer from './WorkflowsContainer/WorkflowsContainer';\nimport CreateWorkflow from './CreateWorkflow/CreateWorkflow';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"block\">\n              <h2><Link to=\"/\">FLOWAPP</Link></h2>\n            </div>\n            <div className=\"block\">\n              <AuthButton />\n            </div>\n          </header>\n\n          {/* Route pages */}\n          <Switch>\n            <Route path=\"/login\" component={LoginPage} />\n\n            <PrivateRoute path=\"/flowapp\" >\n              <WorkflowsContainer />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/\"  exact >\n              <WorkflowsContainer />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/edit\" >\n              <CreateWorkflow />\n            </PrivateRoute>\n\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}